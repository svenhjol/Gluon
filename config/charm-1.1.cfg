# Configuration file

~CONFIG_VERSION: 1.12.2-1.1.0-beta3

"@Modules" {
    B:CharmBrewing=true
    B:CharmCrafting=true
    B:CharmEnchanting=false
    B:CharmLoot=true
    B:CharmSmithing=true
    B:CharmTweaks=true
    B:CharmWorld=true
}


CharmBrewing {
    # Brew cocoa beans in water to make Coffee which gives you a helpful boost.
    B:Coffee=true

    # A nasty potion that withers living things.
    B:Decay=false

    # Brew an Eye of Ender with a Night Vision potion to make a Potion of Ender Sight.
    # Enderman are attracted to your location and you might hear a ringing sound coming from the direction of a stronghold.
    # In the End, the Potion of Ender Sight helps you find an End City.
    B:EnderSight=false

    # Craft a Long Potion with a Cake to make a Flavored Cake that gives a potion effect after eating each slice.
    B:FlavoredCake=true

    # Allows Potion of Poison to be created from Mundane Potions and Poisonous Potatoes.
    B:PoisonousPotatoBrew=false

    Coffee {
        # Duration (in seconds) of Coffee effects.
        I:"Coffee effect duration"=15
    }

    Decay {
        I:"Decay duration"=5
        I:"Wither strength"=2
    }

    EnderSight {
        B:"Client shader effect"=true
        I:"Ender Sight duration"=10
        D:"Enderman spawn chance"=0.05
    }

    FlavoredCake {
        # Duration (in seconds) of the potion effect when eating a single slice of cake.
        I:"Cake effect duration"=60

        # List of Long Potions that can be used to make a cake.
        S:"Cake effect potion types" <
            speed
            strength
            jump_boost
            regeneration
            fire_resistance
            water_breathing
            invisibility
            night_vision
         >
    }

}


CharmCrafting {
    # A compact storage solution borrowed lovingly from Minecraft 1.14.
    B:Barrel=true

    # A bookshelf with 9 slots that can store books.
    # Provides the same enchanting power as a normal bookshelf as long as there is at least 1 book on the shelf.
    B:BookshelfChest=true

    # Right-click the composter with organic items to add them.  When the composter is full, bonemeal will be returned.
    B:Composter=true

    # Offers a smaller storage solution with the benefit of being transportable.  Name your crate on an anvil to change the displayed label.
    # You can also seal the crate by combining it with an iron ingot - the only way to get things out is to break it.
    B:Crate=true

    # A storage block for ender pearls. Eating a chorus fruit will teleport you to a nearby ender pearl block.
    # If a silverfish burrows into an ender pearl block, it will become an endermite.
    B:EnderPearlBlock=true

    # A storage block for gunpowder.  Like Quark's sugar block, but dissolves in lava.
    B:GunpowderBlock=true

    # An elegant lighting solution.  Comes in iron and gold.
    B:Lantern=true

    # A block that acts like sand but is powered like a block of redstone.
    B:RedstoneSand=true

    # A storage block for rotten flesh.  If the rotten flesh block has water on any of its sides, it has a chance to turn into dirt.
    # If there is a soil block above the rotten flesh block, it has a chance to turn into podzol.
    B:RottenFleshBlock=true

    # Craft (or find) beetroot soup with a flower to make a suspicious soup.
    # Different flowers provide positive effects that are different for each world.
    # Be warned: these unstable concoctions might occasionally have negative side effects.
    B:SuspiciousSoup=false

    Composter {
        # These items have a 100% chance of adding a level of compost.
        S:"Items with 100% chance" <
            minecraft:cake
            minecraft:pumpkin_pie
            quark:reed_block
         >

        # These items have a 30% chance of adding a level of compost.
        S:"Items with 30% chance" <
            minecraft:beetroot_seeds
            minecraft:grass
            minecraft:leaves
            minecraft:leaves2
            minecraft:melon_seeds
            minecraft:pumpkin_seeds
            minecraft:sapling
            minecraft:wheat_seeds
            quark:leaf_carpet
         >

        # These items have a 50% chance of adding a level of compost.
        S:"Items with 50% chance" <
            minecraft:cactus
            minecraft:melon
            minecraft:reeds
            minecraft:double_plant
            minecraft:tallgrass
            quark:roots
            quark:roots_black_flower
            quark:roots_blue_flower
            quark:roots_white_flower
         >

        # These items have a 65% chance of adding a level of compost.
        S:"Items with 65% chance" <
            minecraft:apple
            minecraft:beetroot
            minecraft:carrot
            minecraft:dye[3]
            minecraft:tallgrass[2]
            minecraft:yellow_flower
            minecraft:red_flower
            minecraft:red_mushroom
            minecraft:brown_mushroom
            minecraft:potato
            minecraft:poisonous_potato
            minecraft:pumpkin
            minecraft:wheat
            quark:root_flower
            inspirations:flower
            inspirations:materials[4]
            inspirations:materials[5]
            inspirations:edibles[0]
         >

        # These items have a 85% chance of adding a level of compost.
        S:"Items with 85% chance" <
            minecraft:baked_potato
            minecraft:bread
            minecraft:cookie
            minecraft:hay_block
            minecraft:red_mushroom_block
            minecraft:brown_mushroom_block
            quark:turf
         >

        # Sets the maximum stack size of the composter output.
        I:"Maximum number of output items"=5

        # Items that may be produced by the composter when it is full.
        S:"Output from composter" <
            minecraft:dye[15]
         >
    }

    Crate {
        # Enables the display of the crate's name when you look at the crate.
        B:"Show crate name"=true

        # Amount of XP (levels) required to use a name tag to seal a crate.
        I:"XP cost"=0
    }

    EnderPearlBlock {
        # Chance (out of 1.0) of a silverfish burrowing into an Ender Pearl Block, creating an Endermite.
        D:"Silverfish burrowing"=0.5

        # If true, eating a Chorus Fruit while in range of an Ender Pearl Block will teleport you to it.
        B:"Teleport stabilization"=false
    }

    Lantern {
        # Lanterns make a gentle fire crackling sound.
        B:"Ambient sound"=true

        # Lantern will fall when the block under it is broken, or when the block above a hanging lantern is broken.
        B:"Lanterns obey gravity"=true
    }

    RottenFleshBlock {
        # Flesh blocks give off random particles like mycelium.
        B:"Show particles"=true

        # If true, a soil block directly above this rotten flesh block will turn to podzol over time.
        B:"Transform soil above to podzol"=true

        # If true, this block will turn to dirt over time when surrounded by water on at least one side.
        B:"Transform to soil"=true
    }

    SuspiciousSoup {
        B:"Add to loot"=true
        I:"Health restored"=10
        I:"Suspicious Soup duration"=20
    }

}


CharmEnchanting {
    B:CurseBreak=true
    B:ExtraCurses=true
    B:Homing=true
    B:Salvage=true

    CurseBreak {
        I:"XP cost"=1
    }

    ExtraCurses {
        D:"Clumsiness chance"=0.12
        D:"Harming chance"=0.12
        I:"Harming damage"=1
        S:"Haunting mobs" <
            zombie
            skeleton
            witch
            enderman
            charm:spectre
         >
        D:"Haunting spawn chance"=0.12
        I:"Haunting spawn range"=8
        I:"Rusting damage"=12
    }

}


CharmLoot {
    # Abandoned Crates may be found underground.  These crates are sealed so must be smashed to obtain contained items.
    B:AbandonedCrates=false

    # Endermite Powder has a chance of being dropped from an Endermite.
    # Use it in the End to help locate an End City.
    B:EndermitePowder=true

    # Right-click with a Totem of Returning to bind it to a location in the world.
    # The next time you use the totem, you will be returned to that location, destroying the totem in the process.
    B:TotemOfReturning=false

    # With the Totem of Shielding in your offhand (shield) slot, any damage you take is absorbed by the totem instead.
    B:TotemOfShielding=false

    # Use a fortune-enchanted shovel on dirt, sand, clat or gravel for a chance to unearth dungeon treasure items.
    B:UnearthItems=false

    # Wearing a Witch Hat protects your items from being cursed when touched by a Spectre.
    # NOTE: Quark must be installed for this feature to be enabled.
    B:WitchHatProtection=false

    # A witch has a chance to drop a Potion of Decay when killed by a player.
    B:WitchesDropDecay=false

    # A witch has a chance to drop a Potion of Luck when killed by a player.
    B:WitchesDropLuck=false

    AbandonedCrates {
        I:"Cut-off level"=5
        D:"Generate crate chance"=0.28
        I:"Maximum depth"=32
        I:"Start depth"=16
    }

    TotemOfReturning {
        B:"Add as Illusioner drop"=true
        B:"Add to loot"=true
    }

    TotemOfShielding {
        B:"Add as Illusioner drop"=true
        B:"Add to loot"=true
        D:"Damage multiplier"=0.75
        I:"Maximum Health"=100
    }

    UnearthItems {
        D:"Unearthing item chance"=0.001
        I:"Unearthing item damage"=8
        S:"Valid blocks" <
            sand
            gravel
            clay
            dirt
         >
    }

    WitchesDropDecay {
        D:"Drop chance"=0.2
    }

    WitchesDropLuck {
        D:"Drop chance"=0.1
    }

    EndermitePowder {
        # Chance (out of 1.0) of an endermite dropping Endermite Powder when killed by the player.
        D:"Drop chance"=0.5
    }

}


CharmSmithing {
    # Combine an item with its golden version on an anvil to reduce the original item's repair cost.
    B:DecreaseRepairCost=false

    # Combine a Totem of Returning with a clock on an anvil to increase the number of times it can be used.
    B:ExtendTotemOfReturning=false

    # Combine an Enchanted Book with empty bottles on an anvil to get Bottles o' Enchanting.
    # The more levels and enchantments the book has, the more bottles are returned.
    B:ExtractBookXP=true

    # Extract enchantments from any enchanted item into an empty book.
    # The enchantments are weakened in the process, and the original item is destroyed.
    B:ExtractEnchantments=true

    # Increase the amount of nuggets returned when smelting iron and gold items with respect to their recipe and durability.
    B:FurnacesRecycleMore=true

    # Limit furnace input slot to allow only items that have a smelting recipe.
    B:RestrictFurnaceInput=true

    # Tallow can be combined on an anvil with a tool or armor to give a small durability boost.
    # Repairing using tallow has a chance to increase future repair costs of the tool or armor.
    # NOTE: Quark must be installed for this feature to be enabled.
    B:TallowIncreasesDurability=true

    DecreaseRepairCost {
        I:"Decrease repair amount"=2
        I:"XP cost"=0
    }

    ExtendTotemOfReturning {
        S:"Items and uses" <
            minecraft:clock->1
            minecraft:sapling[2]->2
         >
        I:"XP cost"=5
    }

    ExtractBookXP {
        # The minimum number of glass bottles needed when converting enchantments.
        I:"Minimum required bottles"=5

        # Amount of XP (levels) to activate the conversion of enchantments into Bottles o' Enchanting.
        I:"XP cost"=0
    }

    ExtractEnchantments {
        # The minimum XP cost before adding XP equivalent to the enchantment level(s) of the item.
        I:"Base XP cost"=1

        # Number of levels that enchantments are weakened when converting.
        I:"Weaken by amount"=1
    }

    FurnacesRecycleMore {
        # Map of ingot items to their equivalent nugget items. Item recipes will be checked for these ingots.
        # Format is 'modid:inputname[meta]->modid:outputname[meta]->nuggetsPerIngot'.
        S:"Ingot to nugget conversion" <
            minecraft:iron_ingot->minecraft:iron_nugget->3
            minecraft:gold_ingot->minecraft:gold_nugget->3
         >

        # A map of items that return nuggets when smelted.
        # Format is 'modid:inputname(->modid:outputname->ingots)'. Bracketed statement optional, overrides the type and number of ingots in recipe.
        S:"Recyclable items" <
            minecraft:shears
            minecraft:iron_pickaxe
            minecraft:iron_axe
            minecraft:iron_hoe
            minecraft:iron_sword
            minecraft:iron_shovel
            minecraft:iron_helmet
            minecraft:iron_chestplate
            minecraft:iron_leggings
            minecraft:iron_boots
            minecraft:golden_pickaxe
            minecraft:golden_axe
            minecraft:golden_hoe
            minecraft:golden_sword
            minecraft:golden_shovel
            minecraft:golden_helmet
            minecraft:golden_chestplate
            minecraft:golden_leggings
            minecraft:golden_boots
            minecraft:chainmail_helmet->minecraft:iron_ingot->5
            minecraft:chainmail_chestplate->minecraft:iron_ingot->8
            minecraft:chainmail_leggings->minecraft:iron_ingot->7
            minecraft:chainmail_boots->minecraft:iron_ingot->4
            minecraft:iron_horse_armor->minecraft:iron_ingot->8
            minecraft:golden_horse_armor->minecraft:gold_ingot->8
         >
    }

    TallowIncreasesDurability {
        # Percentage (out of 1.0) of the tool or armor repaired by a piece of tallow.
        D:"Amount repaired"=0.02

        # Chance (out of 1.0) of tallow increasing the future repair cost of the tool.
        D:"Chance of repair cost increase"=0.75

        # Amount of XP (levels) required to repair.
        I:"XP cost"=0
    }

}


CharmTweaks {
    # Right click a cactus with an empty glass bottle for a chance to fill the bottle with water.
    B:CactusWater=false

    # Cauldrons can be used as a permanent water source when sneaking.
    B:CauldronWaterSource=true

    # Adds records of all Minecraft background music.
    B:ExtraRecords=true

    # Leather armor is invisible and does not increase mob awareness when drinking Potion of Invisibility.
    B:LeatherArmorInvisibility=true

    # Pickaxes break pistons (and sticky pistons) faster.
    B:PickaxesBreakPistons=true

    # Like Quark's random animal textures, this feature lets wolves and cats spawn with additional skin textures.
    B:RandomAnimalTextures=false

    # Stops the background music when playing a record in a jukebox to avoid a horrible cacophony.
    B:RecordsStopBackgroundMusic=true

    # Using shears to break a flower has a chance of increasing the number of dropped flowers.
    B:ShearedFlowers=false

    # Using shears to break a melon has a chance to drop all 9 melon pieces.
    B:ShearedMelons=false

    # Landing on sponge absorbs some of the player's fall damage.
    B:SpongesReduceFallDamage=false

    # Enchanted Books can stack (up to 16).
    B:StackableEnchantedBooks=true

    # Milk buckets can stack (up to 16).
    B:StackableMilkBuckets=false

    # Potions and water bottles can stack (up to 16).
    B:StackablePotions=true

    # Tame animals will heal within the range of a beacon with regeneration effect.
    B:TamedAnimalsHealing=true

    # Tamed animals no longer take direct damage from players.
    # They still suffer secondary effects, such as burning from a Fire Aspect sword.
    B:TamedAnimalsNoDamage=false

    # As long as a Totem of Undying is in your inventory, it will be consumed to protect you from death.
    B:UseTotemFromInventory=true

    # Drink a bottle of water in a hot and dry biome to provide a regeneration boost.
    B:WaterInHotBiomes=false

    RandomAnimalTextures {
        S:"Black cat textures" <
            minecraft:black
            charm:all_black
         >
        S:"Ocelot textures" <
            minecraft:ocelot
         >
        B:"Random cat textures"=true
        B:"Random wolf textures"=true
        S:"Red cat textures" <
            minecraft:red
            charm:persian
            charm:tabby
         >
        S:"Siamese / other cat textures" <
            minecraft:siamese
            charm:calico
            charm:white
            charm:ragdoll
            charm:british_shorthair
            charm:jellie
         >
        S:"Wolf textures" <
            minecraft:wolf
            charm:brown
            charm:grey
            charm:black
         >
    }

}


CharmWorld {
    # Right-click a bat with a bucket to capture it.
    # Right-click your Bat in a Bucket to release the bat and help locate entities around you.
    B:BatBucket=true

    # If you are holding an emerald and are struck by lightning, the emerald will become charged and you will take no damage.
    # Right-click a Charged Emerald to throw it, creating a lightning strike at the point of impact.
    B:ChargedEmeralds=true

    # Right-click on a beacon whilst crouching to bind the compass to the beacon's location.
    # If Quark is enabled the compass tooltip will be the same color as the beacon's beam.
    B:CompassBinding=true

    # Illusioners are spell-casting illagers equipped with bows that create fake copies of themselves while fighting.
    # This feature lets illusioners spawn in Roofed Forest biomes.  An illusioner has a chance of dropping a totem.
    B:IllusionersInRoofedForest=false

    # Villages spawn in more biomes.  The type of biome determines what materials the village buildings are constructed from.
    B:MoreVillageBiomes=true

    # Gold deposits spawn in the Nether that can be broken to receive gold nuggets.
    B:NetherGoldDeposits=false

    # Spectres spawn in the darkness at quite a low depth, and are almost invisible to see.
    # When they touch the player they curse a weapon, tool or armor item and disappear.
    # They can be defeated by light - or by the lightest of hits.
    B:Spectre=false

    # Swamp huts may generate with a filled cauldron, a chest of loot and a black cat.
    B:SwampHutDecorations=true

    # Improves village aesthetics with internal and external decoration.
    # Houses and huts are populated with functional and decorative blocks according to a career/profession.
    # Village area can have more trees, flowers, crops, mobs and lights.
    B:VillageDecorations=true

    # Villagers have additional trades.  Librarians can buy back enchanted books, tool smiths repair very damaged anvils for a small iron cost, and zombie flesh is more useful.
    B:VillagerTrades=false

    # Vindicators can be found wandering in Roofed Forest biomes.
    B:VindicatorsInRoofedForest=false

    BatBucket {
        # Add the Bat in a Bucket to dungeon loot.
        B:"Add to loot"=true

        # Maximum time (in seconds) that the glowing effect will last.
        I:"Maximum time"=10

        # Range (in blocks) in which entities will glow when the Bat in a Bucket is held.
        I:"Viewing range"=32
    }

    ChargedEmeralds {
        # Add the charged emerald to dungeon loot.
        B:"Add to loot"=true

        # The maximum number of emeralds that will be converted into Charged Emeralds when a stack of emeralds is held.
        I:"Maximum charged emeralds per strike"=4
    }

    CompassBinding {
        # If true, adds co-ordinates and dimension to the bound compass tooltip.
        B:"Add compass information"=true

        # If true, compasses can bind to banners.
        B:"Use Banners"=false

        # If true, compasses can bind to active beacons.
        B:"Use Beacons"=true

        # If true, compasses can bind to beds.
        B:"Use Beds"=false
    }

    IllusionersInRoofedForest {
        D:"Drop chance"=1.0
        I:"Spawn weight"=50
    }

    MoreVillageBiomes {
        # Cold biomes where villages are constructed from Taiga wood.
        S:"Cold biomes" <
            taiga
            mutated_taiga
            mutated_taiga_cold
            ice_flats
            mutated_ice_flats
         >

        # Desert biomes where villages are made from sandstone.
        S:"Desert biomes" <
            desert
            mutated_desert
         >

        # Jungle biomes where villages are constructed from Jungle wood.
        S:"Jungle biomes" <
            jungle
            mutated_jungle
         >

        # Plains biomes where villages are constructed from Oak wood.
        S:"Plains biomes" <
            plains
            mutated_plains
            swampland
            mutated_swampland
         >

        # Savanna biomes where villages are constructed from Acacia wood.
        S:"Savanna biomes" <
            savanna
            mutated_savanna
         >
    }

    Spectre {
        I:"Despawn light level"=8
        I:"Spawn depth"=24
        I:"Spawn weight"=100
    }

    VillageDecorations {
        # Armor Stands appear in village houses.
        B:"Armor Stands"=true

        # Chance (out of 1.0) of a village having barrels containing farming-related loot and composters scattered within its boundary.
        D:"Barrels and composters outside"=0.5

        # Beds appear in village houses.
        B:Beds=true

        # Coloured rugs appear in village houses and on the top of the village well.
        B:Carpet=true

        # Chance (out of 1.0) of items and blocks considered 'common' to spawn.
        D:"Common chance"=0.9

        # Chance (out of 1.0) of a village having tilled soil, crops and water wells within its boundary.
        D:"Crops outside"=0

        # Decorative blocks appear in village houses, such as bookshelves, polished stone and planks.
        B:"Decorative Blocks"=true

        # Chance (out of 1.0) of a chunk within the village boundary spawning a barrel.
        # This is only valid if the 'Barrels outside' config option allows it.
        D:"Extra barrels weight"=0.5

        # Chance (out of 1.0) of a chunk within the village boundary spawning a golem.
        # This is only valid if the 'Mobs outside' config option allows it.
        D:"Extra golem weight"=0.2

        # Chance (out of 1.0) of a chunk allowing any kind of mob generation.
        # The greater the chance, the more likely a mob will be considered to spawn.
        # This is only valid is the 'Mobs outside' config option allows it.
        D:"Extra mobs weight"=0.75

        # Chance (out of 1.0) of a chunk within the village boundary spawning some pumpkins.
        # This is only valid if the 'Pumpkins outside' config option allows it.
        D:"Extra pumpkins weight"=0.25

        # Chance (out of 1.0) of a village having more flowers (up to 3 types chosen based on village seed) within its boundary.
        D:"Flowers outside"=0

        # Functional / Interactive blocks appear in village houses, such as anvils, cauldrons and crafting tables.
        B:"Functional Blocks"=true

        # Item frames appear on the walls of village houses, with items specific to the house theme.
        B:"Item Frames"=true

        # Chance (out of 1.0) of a village having torches and lanterns scattered within its boundary.
        D:"Lights outside"=1.0

        # Chance (out of 1.0) of a village having more dogs, cats and golems within its boundary.
        # If the village is in a snowy biome, this option lets snow golems spawn.
        D:"Mobs outside"=0.75

        # Chance (out of 1.0) of a village having mushrooms spawn, including large mushrooms, within its boundary.
        D:"Mushrooms outside"=0.0

        # Chance (out of 1.0) of a village having pumpkins (and rarely melons) scattered within its boundary.
        D:"Pumpkins outside"=0.25

        # Chance (out of 1.0) of items and blocks considered 'rare' to spawn.
        D:"Rare chance"=0.01

        # Chests, crates and barrels (if enabled) appear in village houses, with loot specific to the house theme.
        B:Storage=true

        # Torches appear in village houses and around fields to stop water freezing.
        B:Torches=true

        # If true, trees that spawn within the village boundary can have vines hanging from them.
        # This is only valid if the 'Trees outside' config option allows it.
        B:"Trees can have vines"=false

        # Chance (out of 1.0) of a village having different types of trees spawn within its boundary.
        D:"Trees outside"=0.1

        # Chance (out of 1.0) of items and blocks considered 'uncommon' to spawn.
        D:"Uncommon chance"=0.35

        # Chance (out of 1.0) of items and blocks considered 'valuable' to spawn.
        D:"Valuable chance"=0.05

        # Number of passes that the generator will erode structures in a zombie village chunk.
        I:"Zombie village erosion damage"=512

        # If true, zombie villages have damaged and eroded buildings and structures.
        B:"Zombie villages are eroded"=true
    }

    VindicatorsInRoofedForest {
        D:"Chance for Johnny"=0.05
        I:"Spawn weight"=90
    }

}


